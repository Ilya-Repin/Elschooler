// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: proto/api/api.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegUserRequest) Reset() {
	*x = RegUserRequest{}
	mi := &file_proto_api_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegUserRequest) ProtoMessage() {}

func (x *RegUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegUserRequest.ProtoReflect.Descriptor instead.
func (*RegUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{0}
}

func (x *RegUserRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type RegUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserToken     string                 `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegUserResponse) Reset() {
	*x = RegUserResponse{}
	mi := &file_proto_api_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegUserResponse) ProtoMessage() {}

func (x *RegUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegUserResponse.ProtoReflect.Descriptor instead.
func (*RegUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{1}
}

func (x *RegUserResponse) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

type AddStudentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserToken     string                 `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	Login         string                 `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddStudentRequest) Reset() {
	*x = AddStudentRequest{}
	mi := &file_proto_api_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStudentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStudentRequest) ProtoMessage() {}

func (x *AddStudentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStudentRequest.ProtoReflect.Descriptor instead.
func (*AddStudentRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{2}
}

func (x *AddStudentRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *AddStudentRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *AddStudentRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AddStudentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StudentToken  string                 `protobuf:"bytes,1,opt,name=student_token,json=studentToken,proto3" json:"student_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddStudentResponse) Reset() {
	*x = AddStudentResponse{}
	mi := &file_proto_api_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStudentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStudentResponse) ProtoMessage() {}

func (x *AddStudentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStudentResponse.ProtoReflect.Descriptor instead.
func (*AddStudentResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{3}
}

func (x *AddStudentResponse) GetStudentToken() string {
	if x != nil {
		return x.StudentToken
	}
	return ""
}

type DeleteStudentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserToken     string                 `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	StudentToken  string                 `protobuf:"bytes,2,opt,name=student_token,json=studentToken,proto3" json:"student_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStudentRequest) Reset() {
	*x = DeleteStudentRequest{}
	mi := &file_proto_api_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStudentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStudentRequest) ProtoMessage() {}

func (x *DeleteStudentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStudentRequest.ProtoReflect.Descriptor instead.
func (*DeleteStudentRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteStudentRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *DeleteStudentRequest) GetStudentToken() string {
	if x != nil {
		return x.StudentToken
	}
	return ""
}

type DeleteStudentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStudentResponse) Reset() {
	*x = DeleteStudentResponse{}
	mi := &file_proto_api_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStudentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStudentResponse) ProtoMessage() {}

func (x *DeleteStudentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStudentResponse.ProtoReflect.Descriptor instead.
func (*DeleteStudentResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteStudentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateStudentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserToken     string                 `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	StudentToken  string                 `protobuf:"bytes,2,opt,name=student_token,json=studentToken,proto3" json:"student_token,omitempty"`
	Login         string                 `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStudentRequest) Reset() {
	*x = UpdateStudentRequest{}
	mi := &file_proto_api_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentRequest) ProtoMessage() {}

func (x *UpdateStudentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentRequest.ProtoReflect.Descriptor instead.
func (*UpdateStudentRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateStudentRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *UpdateStudentRequest) GetStudentToken() string {
	if x != nil {
		return x.StudentToken
	}
	return ""
}

func (x *UpdateStudentRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *UpdateStudentRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UpdateStudentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StudentToken  string                 `protobuf:"bytes,1,opt,name=student_token,json=studentToken,proto3" json:"student_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStudentResponse) Reset() {
	*x = UpdateStudentResponse{}
	mi := &file_proto_api_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentResponse) ProtoMessage() {}

func (x *UpdateStudentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentResponse.ProtoReflect.Descriptor instead.
func (*UpdateStudentResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateStudentResponse) GetStudentToken() string {
	if x != nil {
		return x.StudentToken
	}
	return ""
}

type LisOfIntMarks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Marks         []int32                `protobuf:"varint,1,rep,packed,name=marks,proto3" json:"marks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LisOfIntMarks) Reset() {
	*x = LisOfIntMarks{}
	mi := &file_proto_api_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LisOfIntMarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LisOfIntMarks) ProtoMessage() {}

func (x *LisOfIntMarks) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LisOfIntMarks.ProtoReflect.Descriptor instead.
func (*LisOfIntMarks) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{8}
}

func (x *LisOfIntMarks) GetMarks() []int32 {
	if x != nil {
		return x.Marks
	}
	return nil
}

type DayMarksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserToken     string                 `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	StudentToken  string                 `protobuf:"bytes,2,opt,name=student_token,json=studentToken,proto3" json:"student_token,omitempty"`
	Date          string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DayMarksRequest) Reset() {
	*x = DayMarksRequest{}
	mi := &file_proto_api_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DayMarksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayMarksRequest) ProtoMessage() {}

func (x *DayMarksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayMarksRequest.ProtoReflect.Descriptor instead.
func (*DayMarksRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{9}
}

func (x *DayMarksRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *DayMarksRequest) GetStudentToken() string {
	if x != nil {
		return x.StudentToken
	}
	return ""
}

func (x *DayMarksRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type DayMarksResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Marks         map[string]*LisOfIntMarks `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	WorstMark     int32                     `protobuf:"varint,2,opt,name=worst_mark,json=worstMark,proto3" json:"worst_mark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DayMarksResponse) Reset() {
	*x = DayMarksResponse{}
	mi := &file_proto_api_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DayMarksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayMarksResponse) ProtoMessage() {}

func (x *DayMarksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayMarksResponse.ProtoReflect.Descriptor instead.
func (*DayMarksResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{10}
}

func (x *DayMarksResponse) GetMarks() map[string]*LisOfIntMarks {
	if x != nil {
		return x.Marks
	}
	return nil
}

func (x *DayMarksResponse) GetWorstMark() int32 {
	if x != nil {
		return x.WorstMark
	}
	return 0
}

type AverageMarksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserToken     string                 `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	StudentToken  string                 `protobuf:"bytes,2,opt,name=student_token,json=studentToken,proto3" json:"student_token,omitempty"`
	Period        int32                  `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AverageMarksRequest) Reset() {
	*x = AverageMarksRequest{}
	mi := &file_proto_api_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AverageMarksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AverageMarksRequest) ProtoMessage() {}

func (x *AverageMarksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AverageMarksRequest.ProtoReflect.Descriptor instead.
func (*AverageMarksRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{11}
}

func (x *AverageMarksRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *AverageMarksRequest) GetStudentToken() string {
	if x != nil {
		return x.StudentToken
	}
	return ""
}

func (x *AverageMarksRequest) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

type AverageMarksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Marks         map[string]string      `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	WorstMark     string                 `protobuf:"bytes,2,opt,name=worst_mark,json=worstMark,proto3" json:"worst_mark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AverageMarksResponse) Reset() {
	*x = AverageMarksResponse{}
	mi := &file_proto_api_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AverageMarksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AverageMarksResponse) ProtoMessage() {}

func (x *AverageMarksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AverageMarksResponse.ProtoReflect.Descriptor instead.
func (*AverageMarksResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{12}
}

func (x *AverageMarksResponse) GetMarks() map[string]string {
	if x != nil {
		return x.Marks
	}
	return nil
}

func (x *AverageMarksResponse) GetWorstMark() string {
	if x != nil {
		return x.WorstMark
	}
	return ""
}

type FinalMarksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserToken     string                 `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	StudentToken  string                 `protobuf:"bytes,2,opt,name=student_token,json=studentToken,proto3" json:"student_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalMarksRequest) Reset() {
	*x = FinalMarksRequest{}
	mi := &file_proto_api_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalMarksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalMarksRequest) ProtoMessage() {}

func (x *FinalMarksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalMarksRequest.ProtoReflect.Descriptor instead.
func (*FinalMarksRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{13}
}

func (x *FinalMarksRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *FinalMarksRequest) GetStudentToken() string {
	if x != nil {
		return x.StudentToken
	}
	return ""
}

type FinalMarksResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Marks         map[string]*LisOfIntMarks `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	WorstMark     int32                     `protobuf:"varint,2,opt,name=worst_mark,json=worstMark,proto3" json:"worst_mark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalMarksResponse) Reset() {
	*x = FinalMarksResponse{}
	mi := &file_proto_api_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalMarksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalMarksResponse) ProtoMessage() {}

func (x *FinalMarksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalMarksResponse.ProtoReflect.Descriptor instead.
func (*FinalMarksResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_api_proto_rawDescGZIP(), []int{14}
}

func (x *FinalMarksResponse) GetMarks() map[string]*LisOfIntMarks {
	if x != nil {
		return x.Marks
	}
	return nil
}

func (x *FinalMarksResponse) GetWorstMark() int32 {
	if x != nil {
		return x.WorstMark
	}
	return 0
}

var File_proto_api_api_proto protoreflect.FileDescriptor

var file_proto_api_api_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0x2a, 0x0a, 0x0e, 0x52, 0x65,
	0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x64, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x39,
	0x0a, 0x12, 0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5a, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x31, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3c, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x25, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x4f, 0x66, 0x49, 0x6e,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x69, 0x0a, 0x0f,
	0x44, 0x61, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x79, 0x4d,
	0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x61, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x73, 0x74, 0x5f, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x73, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x1a, 0x4c, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x4f, 0x66, 0x49, 0x6e,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x71, 0x0a, 0x13, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x14, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72,
	0x73, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77,
	0x6f, 0x72, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x57, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xbb, 0x01, 0x0a, 0x12,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x72,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x77, 0x6f, 0x72, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x1a, 0x4c, 0x0a, 0x0a, 0x4d,
	0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x69, 0x73, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x3c, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x07, 0x52, 0x65, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd8, 0x01, 0x0a, 0x07, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xcd, 0x01, 0x0a, 0x05, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x3a, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x61, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b,
	0x73, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x72,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x69,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_api_proto_rawDescOnce sync.Once
	file_proto_api_api_proto_rawDescData = file_proto_api_api_proto_rawDesc
)

func file_proto_api_api_proto_rawDescGZIP() []byte {
	file_proto_api_api_proto_rawDescOnce.Do(func() {
		file_proto_api_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_api_proto_rawDescData)
	})
	return file_proto_api_api_proto_rawDescData
}

var file_proto_api_api_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_api_api_proto_goTypes = []any{
	(*RegUserRequest)(nil),        // 0: api.RegUserRequest
	(*RegUserResponse)(nil),       // 1: api.RegUserResponse
	(*AddStudentRequest)(nil),     // 2: api.AddStudentRequest
	(*AddStudentResponse)(nil),    // 3: api.AddStudentResponse
	(*DeleteStudentRequest)(nil),  // 4: api.DeleteStudentRequest
	(*DeleteStudentResponse)(nil), // 5: api.DeleteStudentResponse
	(*UpdateStudentRequest)(nil),  // 6: api.UpdateStudentRequest
	(*UpdateStudentResponse)(nil), // 7: api.UpdateStudentResponse
	(*LisOfIntMarks)(nil),         // 8: api.LisOfIntMarks
	(*DayMarksRequest)(nil),       // 9: api.DayMarksRequest
	(*DayMarksResponse)(nil),      // 10: api.DayMarksResponse
	(*AverageMarksRequest)(nil),   // 11: api.AverageMarksRequest
	(*AverageMarksResponse)(nil),  // 12: api.AverageMarksResponse
	(*FinalMarksRequest)(nil),     // 13: api.FinalMarksRequest
	(*FinalMarksResponse)(nil),    // 14: api.FinalMarksResponse
	nil,                           // 15: api.DayMarksResponse.MarksEntry
	nil,                           // 16: api.AverageMarksResponse.MarksEntry
	nil,                           // 17: api.FinalMarksResponse.MarksEntry
}
var file_proto_api_api_proto_depIdxs = []int32{
	15, // 0: api.DayMarksResponse.marks:type_name -> api.DayMarksResponse.MarksEntry
	16, // 1: api.AverageMarksResponse.marks:type_name -> api.AverageMarksResponse.MarksEntry
	17, // 2: api.FinalMarksResponse.marks:type_name -> api.FinalMarksResponse.MarksEntry
	8,  // 3: api.DayMarksResponse.MarksEntry.value:type_name -> api.LisOfIntMarks
	8,  // 4: api.FinalMarksResponse.MarksEntry.value:type_name -> api.LisOfIntMarks
	0,  // 5: api.User.RegUser:input_type -> api.RegUserRequest
	2,  // 6: api.Student.AddStudent:input_type -> api.AddStudentRequest
	4,  // 7: api.Student.DeleteStudent:input_type -> api.DeleteStudentRequest
	6,  // 8: api.Student.UpdateStudent:input_type -> api.UpdateStudentRequest
	9,  // 9: api.Marks.GetDayMarks:input_type -> api.DayMarksRequest
	11, // 10: api.Marks.GetAverageMarks:input_type -> api.AverageMarksRequest
	13, // 11: api.Marks.GetFinalMarks:input_type -> api.FinalMarksRequest
	1,  // 12: api.User.RegUser:output_type -> api.RegUserResponse
	3,  // 13: api.Student.AddStudent:output_type -> api.AddStudentResponse
	5,  // 14: api.Student.DeleteStudent:output_type -> api.DeleteStudentResponse
	7,  // 15: api.Student.UpdateStudent:output_type -> api.UpdateStudentResponse
	10, // 16: api.Marks.GetDayMarks:output_type -> api.DayMarksResponse
	12, // 17: api.Marks.GetAverageMarks:output_type -> api.AverageMarksResponse
	14, // 18: api.Marks.GetFinalMarks:output_type -> api.FinalMarksResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_api_api_proto_init() }
func file_proto_api_api_proto_init() {
	if File_proto_api_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_api_api_proto_goTypes,
		DependencyIndexes: file_proto_api_api_proto_depIdxs,
		MessageInfos:      file_proto_api_api_proto_msgTypes,
	}.Build()
	File_proto_api_api_proto = out.File
	file_proto_api_api_proto_rawDesc = nil
	file_proto_api_api_proto_goTypes = nil
	file_proto_api_api_proto_depIdxs = nil
}
